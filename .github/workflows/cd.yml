name: CD

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint
        run: npm run lint
      
      - name: Test
        run: npm test
  
  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build frontend
        run: npm run build:frontend
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
      
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./src/frontend
          vercel-args: '--prod'

  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Build backend
        run: npm run build:backend
      
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.13
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          appdir: "src/backend"
        env:
          HD_NODE_ENV: production
          HD_PORT: ${{ secrets.PORT }}
          HD_MONGODB_URI: ${{ secrets.MONGODB_URI }}
          HD_JWT_SECRET: ${{ secrets.JWT_SECRET }}
          HD_JWT_EXPIRES_IN: ${{ secrets.JWT_EXPIRES_IN }}
  
  notify:
    name: Notification
    runs-on: ubuntu-latest
    needs: [deploy-frontend, deploy-backend]
    if: always()
    steps:
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        if: ${{ secrets.SLACK_WEBHOOK != '' }}
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status == 'success' && 'good' || 'danger' }}
          SLACK_TITLE: 'Deployment Status'
          SLACK_MESSAGE: 'Deployment ${{ job.status == "success" && "succeeded" || "failed" }}'
          
      - name: Telegram Notification
        uses: appleboy/telegram-action@master
        if: ${{ secrets.TELEGRAM_TO != '' && secrets.TELEGRAM_TOKEN != '' }}
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            üöÄ Depolyment Status: ${{ job.status == 'success' && '‚úÖ –£—Å–ø–µ—à–Ω–æ' || '‚ùå –û—à–∏–±–∫–∞' }}
            –ü—Ä–æ–µ–∫—Ç: habit-game
            URL Frontend: ${{ secrets.VERCEL_URL }}
            URL Backend: ${{ secrets.HEROKU_APP_URL }} 